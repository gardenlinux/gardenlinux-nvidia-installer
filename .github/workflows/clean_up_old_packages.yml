name: Clean up old installer packages

on:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * 0'

jobs:
  cleanup:
    runs-on: ubuntu-latest

    steps:
      - name: Install gh
        run: |
          sudo apt-get update
          sudo apt install -y gh
      - name: Get GitHub App installation token
        id: app-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
      - name: Delete old container images older than 30 days 
        env:
          EXPIRY-DAYS: 30
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          Cutoff_date=$(date -d "-${EXPIRY-DAYS} days" --iso-8601=seconds)

          echo "Fetching images with name containing 'gardenlinux-nvidia-installer'..."

          gh api \
            -H "Accept: application/vnd.github+json" \
            "/orgs/gardenlinux/packages" \
            --paginate | jq .

          PACKAGE_NAME=$(gh api orgs/gardenlinux/packages --method GET -F package_type=container --paginate -q '.[] | select(.name | contains("gardenlinux-nvidia-installer")) | .name')

          for package in $PACKAGE_NAME; do
            PACKAGE_ENCODED=$(jq -rn --arg v "$package" '$v|@uri')
            echo "ðŸ”Ž Checking versions older than $Cutoff_date for $package..."
            VERSION_IDS=$(gh api "orgs/gardenlinux/packages/container/${PACKAGE_ENCODED}/versions" --paginate -q '.[] | select(.created_at < "'"$Cutoff_date"'") | .id')
            if [ -z "$VERSION_IDS" ]; then
              echo "No old versions found for $package"
              continue
            fi
          done

