name: Build Drivers (non-container artifacts)

on:
  workflow_call:

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install PyYAML
        run: pip install pyyaml

      - name: Generate matrix
        id: set-matrix
        run: |
          MATRIX_JSON="$(python3 .ci/generate_matrix.py)"
          echo "matrix=$(echo "$MATRIX_JSON" | jq -c '.build')" >> $GITHUB_OUTPUT

  build:
    needs: generate-matrix
    runs-on: ${{ matrix.arch == 'arm64' && 'ubuntu-24.04-arm' || 'ubuntu-24.04' }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}

    env:
      TARGET_ARCH: ${{ matrix.arch }}
      GL_VERSION: ${{ matrix.os_version }}
      DRIVER_VERSION: ${{ matrix.driver_version }}
      KERNEL_TYPE: ${{ matrix.kernel_flavour }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Compile module
        run: |
          make build-driver WORKSPACE_DIR="${{ github.workspace }}" \
             KERNEL_TYPE=$KERNEL_TYPE \
             TARGET_ARCH=$TARGET_ARCH \
             GL_VERSION=$GL_VERSION \
             DRIVER_VERSION=$DRIVER_VERSION

      - name: Upload built driver
        uses: actions/upload-artifact@v4
        if: github.event_name != 'pull_request'
        with:
          name: driver-${{ matrix.os_version }}-${{ matrix.arch }}-${{ matrix.kernel_flavour }}-${{ matrix.driver_version }}
          path: ${{ github.workspace }}/out/nvidia/driver-*.tar.gz

  check-complete:
    name: Pull Request Check
    runs-on: ubuntu-24.04
    if: github.event_name == 'pull_request'
    needs: build
    steps:
      - name: Ensure all matrix jobs passed
        run: |
          if [[ "${{ needs.build.result }}" != "success" ]]; then
            echo "One or more build jobs failed."
            exit 1
          fi
